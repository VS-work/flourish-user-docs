<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Flourish Docs â€“ Payments</title>
    <link>https://vs-work.github.io/flourish-user-docs/docs/pos/payment/</link>
    <description>Recent content in Payments on Flourish Docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 01 Jan 2017 00:00:00 +0000</lastBuildDate>
    
	  <atom:link href="https://vs-work.github.io/flourish-user-docs/docs/pos/payment/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Payments</title>
      <link>https://vs-work.github.io/flourish-user-docs/docs/pos/payment/payment-methods/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vs-work.github.io/flourish-user-docs/docs/pos/payment/payment-methods/</guid>
      <description>
        
        
        

&lt;p&gt;The following document gives a general overview about the different integration types and Flourish payment process. To learn more about the different payment-related topics follow our [API Documentation](). It will take you to a more detailed description including interactive examples.&lt;/p&gt;

&lt;h2 id=&#34;transaction-process&#34;&gt;Transaction Process&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;transaction-states.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;managing-payment-types&#34;&gt;Managing Payment Types&lt;/h2&gt;

&lt;h3 id=&#34;list-payment-types&#34;&gt;List Payment Types&lt;/h3&gt;

&lt;p&gt;To return the list of all available payment types and providers, use following API endpoint:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#a40000&#34;&gt;Name:&lt;/span&gt;         &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;GetPaymentTypes&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#a40000&#34;&gt;Method:&lt;/span&gt;       &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;GET&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#a40000&#34;&gt;Pattern:&lt;/span&gt;      &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/v1/api/grow/paymenttypes&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;as a result, you will receive a list of currently available payment options&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;PaymentTypeIDCash              = 1
PaymentTypeIDCanPay            = 2
PaymentTypeIDCheck             = 3
PaymentTypeIDCreditCard        = 4
PaymentTypeIDDebitCard         = 5
PaymentTypeIDGiftCard          = 6
PaymentTypeIDLinx              = 7
PaymentTypeIDManual            = 8
PaymentTypeIDStoreCredit       = 9
PaymentTypeIDStoreCreditIssued = 10
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;enabling-disabling-payment-type&#34;&gt;Enabling / Disabling Payment Type&lt;/h3&gt;

&lt;p&gt;To enable or disable certain payment type, use following API requests, where &lt;code&gt;PaymentTypeID&lt;/code&gt; is a corresponding number from the list of currently available payment types:&lt;/p&gt;

&lt;h4 id=&#34;api&#34;&gt;API&lt;/h4&gt;

&lt;p&gt;Enable:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#a40000&#34;&gt;Name:&lt;/span&gt;         &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;EnablePaymentType&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#a40000&#34;&gt;Method:&lt;/span&gt;       &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;PUT&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#a40000&#34;&gt;Pattern:&lt;/span&gt;      &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/v1/api/grow/paymenttypes/{&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;orderPaymentTypeIDKey&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;}/enable&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Disable:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#a40000&#34;&gt;Name:&lt;/span&gt;         &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;DisablePaymentType&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#a40000&#34;&gt;Method:&lt;/span&gt;       &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;PUT&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#a40000&#34;&gt;Pattern:&lt;/span&gt;      &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/v1/api/grow/paymenttypes/{&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;orderPaymentTypeIDKey&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;}/disable&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;linx&#34;&gt;LinX&lt;/h2&gt;

&lt;p&gt;LINX is the primary provider of credit and debit merchant processing services for legal cannabis dispensaries in the United States.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#a40000&#34;&gt;Name:&lt;/span&gt;         &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;LinxBalanceCheck&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#a40000&#34;&gt;Method:&lt;/span&gt;       &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;POST&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#a40000&#34;&gt;Pattern:&lt;/span&gt;      &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/v1/api/payments/linx/balance&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#a40000&#34;&gt;Name:&lt;/span&gt;         &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;LinxGetAccessToken&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#a40000&#34;&gt;Method:&lt;/span&gt;       &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;GET&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#a40000&#34;&gt;Pattern:&lt;/span&gt;      &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/v1/api/payments/linx/accesstoken&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;canpay&#34;&gt;CanPay&lt;/h2&gt;

&lt;p&gt;CanPay offers payment solutions for the State Regulated Cannabis Industry and other emerging markets&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#a40000&#34;&gt;No&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;Info&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;Found&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;manual-payment&#34;&gt;Manual Payment&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Manual Payments:&lt;/strong&gt; Payments that supposed to be transacted with a third-party transaction, via LINX or CanPay, but for one reason or another, they weren&amp;rsquo;t able to be processed in Flourish. The transaction still needs to be recorded in Flourish, and this is possible via Manual Payment.&lt;/p&gt;

&lt;p&gt;To proceed with Manual Payment, merchant needs to enter the amount of payment received via transaction that needs to be recorded, the date (defaults to today) the transaction occurred, the payment method (either LINX or CanPay), and last, the ID of the transaction that was received.&lt;/p&gt;

&lt;h3 id=&#34;api-1&#34;&gt;API&lt;/h3&gt;

&lt;p&gt;To submit a transaction, use following API call:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#a40000&#34;&gt;Name:&lt;/span&gt;         &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;PostOrderPaymentTransaction&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#a40000&#34;&gt;Pattern:&lt;/span&gt;      &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/v1/api/grow/customers/{&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;customerIDKey&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;}/orders/{&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;orderIDKey&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;}/payment&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#a40000&#34;&gt;Method:&lt;/span&gt;       &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;POST&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Important request strings:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;quot;payment_type_id&amp;quot;: 8,&lt;/code&gt; - PaymentTypeID, 8 is Manual
&lt;code&gt;&amp;quot;payment_location_id&amp;quot;: 1,&lt;/code&gt; - Always 1, stands for &lt;em&gt;InStore&lt;/em&gt;
&lt;code&gt;&amp;quot;till_id&amp;quot;: 2,&lt;/code&gt; - Purchase till number, required for CanPay &amp;amp; Linx &amp;amp; Manual
&lt;code&gt;&amp;quot;reference_token&amp;quot;:&lt;/code&gt; - &amp;ldquo;LINX&amp;rdquo;  or &amp;ldquo;CANPAY&amp;rdquo;
&lt;code&gt;&amp;quot;reference_id&amp;quot;: &amp;quot;12345&amp;quot;&lt;/code&gt; -  Linx or CanPay reference ID&lt;/p&gt;

&lt;h2 id=&#34;datamotio&#34;&gt;DataMotio&lt;/h2&gt;

&lt;p&gt;DataMotio is a third party virtual credit card payment solution, that provides the ability to accept credit card payments through a customer handled standard and secured CC terminal / chip reader. Having this functionality allows us to quickly and securely accept credit card payments without needing to handle the customerâ€™s credit card.&lt;/p&gt;

&lt;p&gt;The DataMotio credit card solution requires two company level sets of credentials, one for the terminal API endpoints and one for the charge endpoints. These are the company level credentials and can be stored directly in the Flourish system with no UI. The Merchant ID is facility specific and can be found in the &amp;ldquo;Payment Methods&amp;rdquo; tab in the facility settings. In this tab it is also possible enable/disable the payment method at a facility.&lt;/p&gt;

&lt;h3 id=&#34;api-2&#34;&gt;API&lt;/h3&gt;

&lt;p&gt;To generate payment receipt for DataMotio transaction, use following API call:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#a40000&#34;&gt;Name:&lt;/span&gt;         &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;GenerateDataMotioPaymentReceipt&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#a40000&#34;&gt;Method:&lt;/span&gt;       &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;GET&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#a40000&#34;&gt;Pattern:&lt;/span&gt;      &lt;span style=&#34;color:#a40000&#34;&gt;BaseFacilityURL&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/transactions/{&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;transactionIDKey&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;}/datamotio/receipt&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;purchase-order-payment-creation&#34;&gt;Purchase Order Payment Creation&lt;/h2&gt;

&lt;h3 id=&#34;validation&#34;&gt;Validation&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Valid lot code is required&lt;/li&gt;
&lt;li&gt;Unit price is required&lt;/li&gt;
&lt;li&gt;Quantity is required&lt;/li&gt;
&lt;li&gt;Payment timestamp is required&lt;/li&gt;
&lt;li&gt;Passed lot code should be valid&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Valid Lot Code:&lt;/strong&gt; lot code is considered valid, if it matches all lot codes of orderlines tied to the payement.&lt;/p&gt;

&lt;h2 id=&#34;post-order-payment-transaction&#34;&gt;Post Order Payment Transaction&lt;/h2&gt;

&lt;h3 id=&#34;validation-1&#34;&gt;Validation&lt;/h3&gt;

&lt;p&gt;Validation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Order ID required&lt;/li&gt;
&lt;li&gt;Facility ID required&lt;/li&gt;
&lt;li&gt;Only Cash &amp;amp; Credit&lt;/li&gt;
&lt;li&gt;Suported payment locations : Only &lt;strong&gt;&amp;ldquo;Mobile&amp;rdquo;&lt;/strong&gt; and &lt;strong&gt;&amp;ldquo;In Store&amp;rdquo;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Reference Token is required for CanPay method&lt;/li&gt;
&lt;li&gt;Tills shouldn&amp;rsquo;t be closed&lt;/li&gt;
&lt;li&gt;LinX:

&lt;ul&gt;
&lt;li&gt;Reference Token is required (ref token = card number)&lt;/li&gt;
&lt;li&gt;Customer identification number is required&lt;/li&gt;
&lt;li&gt;Customer identification type should be &amp;ldquo;Driver License&amp;rdquo; or &amp;ldquo;Passport&amp;rdquo;&lt;/li&gt;
&lt;li&gt;If customer identification type is &amp;ldquo;Driver License&amp;rdquo; there&amp;rsquo;s should be a drivers license state (CustomerState field in code)&lt;/li&gt;
&lt;li&gt;If &amp;ldquo;passport&amp;rdquo; there&amp;rsquo;s should be a passport country&lt;/li&gt;
&lt;li&gt;Customer name is required&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Purchase Limits Validation</title>
      <link>https://vs-work.github.io/flourish-user-docs/docs/pos/payment/purchase-limits/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vs-work.github.io/flourish-user-docs/docs/pos/payment/purchase-limits/</guid>
      <description>
        
        
        

&lt;h1 id=&#34;purchase-limits&#34;&gt;Purchase Limits&lt;/h1&gt;

&lt;p&gt;This guide will walk through Flourish cannabis purchase limits validation process. Recreational &amp;amp; Medical states all have something in common â€“ they sell weed and each have limits too, restrictions on how much customers can buy on any given day or at any given time, to make sure Flourish legally selling them the amount mandated by law.&lt;/p&gt;

&lt;h2 id=&#34;glossary&#34;&gt;Glossary&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Purchase Limit&lt;/strong&gt; are the limits that are established by law for the purchase of goods with the content of cannabis.&lt;/p&gt;

&lt;h2 id=&#34;validation-process-overview&#34;&gt;Validation Process Overview&lt;/h2&gt;

&lt;p&gt;There are limits of 2 types, Medical and Recreational. Depending on the status of the custom, such a limit will be applied.&lt;/p&gt;

&lt;p&gt;Facility has limits that are set by state law, so when customer makes a purchase and before he sends it for payment, purchase has to be &lt;em&gt;validated,&lt;/em&gt; or otherwise all buttons are going to be hidden.&lt;/p&gt;

&lt;p&gt;When customer adds the product to the basket, the &amp;ldquo;Validate&amp;rdquo; button appears. Selecting &amp;ldquo;Validate&amp;rdquo; button sends and API call to compare the amount of cannabis that customer have already bought in the last 24 hours and planning to buy in current purchase.&lt;/p&gt;

&lt;p&gt;If customer exceeded the limits, then he or she will see an error message, stating that there are too many substances than are allowed.&lt;/p&gt;

&lt;p&gt;![]()&lt;/p&gt;

&lt;p&gt;If everything is ok, success message and the remaining buttons for working with the order appear.&lt;/p&gt;

&lt;p&gt;![]()&lt;/p&gt;

&lt;p&gt;Note: For Nevada, validation is a little different right now (November, 2019). During validation, the product that was purchased by the customer in the last 24 hours is not added to the quantity of goods in the basket, that is, validation occurs only within the order.&lt;/p&gt;

&lt;p&gt;Limits are set for a certain category of goods. The list of categories can be found below:&lt;/p&gt;

&lt;p&gt;&lt;style type=&#34;text/css&#34;&gt;
.tg  {border-collapse:collapse;border-spacing:0;border-color:#aabcfe;margin:0px auto;}
.tg td{font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:0px;overflow:hidden;word-break:normal;border-top-width:1px;border-bottom-width:1px;border-color:#aabcfe;color:#669;background-color:#e8edff;}
.tg th{font-family:Arial, sans-serif;font-size:14px;font-weight:normal;padding:10px 5px;border-style:solid;border-width:0px;overflow:hidden;word-break:normal;border-top-width:1px;border-bottom-width:1px;border-color:#aabcfe;color:#039;background-color:#b9c9fe;}
.tg .tg-lboi{border-color:inherit;text-align:left;vertical-align:middle}
.tg .tg-0pky{border-color:inherit;text-align:left;vertical-align:top}
.tg-sort-header::-moz-selection{background:0 0}.tg-sort-header::selection{background:0 0}.tg-sort-header{cursor:pointer}.tg-sort-header:after{content:&amp;ldquo;;float:right;margin-top:7px;border-width:0 5px 5px;border-style:solid;border-color:#404040 transparent;visibility:hidden}.tg-sort-header:hover:after{visibility:visible}.tg-sort-asc:after,.tg-sort-asc:hover:after,.tg-sort-desc:after{visibility:visible;opacity:.4}.tg-sort-desc:after{border-bottom:none;border-width:5px 5px 0}@media screen and (max-width: 767px) {.tg {width: auto !important;}.tg col {width: auto !important;}.tg-wrap {overflow-x: auto;-webkit-overflow-scrolling: touch;margin: auto 0px;}}&lt;/style&gt;
&lt;div class=&#34;tg-wrap&#34;&gt;&lt;table id=&#34;tg-wmmqw&#34; class=&#34;tg&#34;&gt;
  &lt;tr&gt;
    &lt;th class=&#34;tg-lboi&#34;&gt;Labeling&lt;br&gt;Lighting&lt;br&gt;ll123&lt;br&gt;Marijuana Flowers/Buds&lt;br&gt;Non-Solvent Based Concentrate&lt;br&gt;Non-Solvent Based Concentrate (Each)&lt;br&gt;Nutrients&lt;br&gt;Oral Oil&lt;br&gt;Packaging&lt;br&gt;Packaging Components&lt;br&gt;Packaging Container&lt;br&gt;Packaging Label&lt;br&gt;Pots and Trays&lt;br&gt;Pre-rolled cigs/joints&lt;br&gt;Pre-Rolls&lt;/th&gt;
    &lt;th class=&#34;tg-lboi&#34;&gt;Propagation&lt;br&gt;R&amp;amp;D Testing / Homogeneity Testing (Count-base&lt;br&gt;R&amp;amp;D Testing / Homogeneity Testing (Weight-bas&lt;br&gt;Raw Materials&lt;br&gt;Refrigerated&lt;br&gt;Seeds&lt;br&gt;Seeds (bulk)&lt;br&gt;Seeds (each)&lt;br&gt;Seeds (weight)&lt;br&gt;Shake/Trim&lt;br&gt;Shake/Trim (by strain)&lt;br&gt;Shake/Trim Approved for Extraction&lt;br&gt;Small/Popcorn Buds&lt;br&gt;Soft Gel&lt;br&gt;Solvent Based Concentrate&lt;br&gt;Solvent Based Concentrate (Each)&lt;/th&gt;
    &lt;th class=&#34;tg-0pky&#34;&gt;Supplies&lt;br&gt;Suppository&lt;br&gt;Suppository (each)&lt;br&gt;Terpenes&lt;br&gt;Tinctures&lt;br&gt;Tinctures (each)&lt;br&gt;Topicals&lt;br&gt;Topicals (each)&lt;br&gt;Transdermal Patch&lt;br&gt;Transdermal Patch (each)&lt;br&gt;Vape Cartridge&lt;br&gt;Vaporizer&lt;br&gt;Waste&lt;br&gt;Wet Whole Plant Approved for Extraction&lt;br&gt;Whole Harvested Plant&lt;br&gt;Whole Wet Plant&lt;/th&gt;
  &lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;script charset=&#34;utf-8&#34;&gt;var TGSort=window.TGSort||function(n){&amp;ldquo;use strict&amp;rdquo;;function r(n){return n.length}function t(n,t){if(n)for(var e=0,a=r(n);a&amp;gt;e;++e)t(n[e],e)}function e(n){return n.split(&amp;ldquo;&amp;rdquo;).reverse().join(&amp;ldquo;&amp;rdquo;)}function a(n){var e=n[0];return t(n,function(n){for(;!n.startsWith(e);)e=e.substring(0,r(e)-1)}),r(e)}function o(n,r){return-1!=n.map&amp;reg;.indexOf(!0)}function u(n,r){return function(t){var e=&amp;ldquo;&amp;rdquo;;return t.replace(n,function(n,t,a){return e=t.replace(r,&amp;ldquo;&amp;rdquo;)+&amp;ldquo;.&amp;rdquo;+(a||&amp;ldquo;&amp;rdquo;).substring(1)}),l(e)}}function i(n){var t=l(n);return!isNaN(t)&amp;amp;&amp;amp;r(&amp;ldquo;&amp;rdquo;+t)+1&amp;gt;=r(n)?t:NaN}function s(n){var e=[];return t([i,m,g],function(t){var a;r(e)||o(a=n.map(t),isNaN)||(e=a)}),e}function c(n){var t=s(n);if(!r(t)){var o=a(n),u=a(n.map(e)),i=n.map(function(n){return n.substring(o,r(n)-u)});t=s(i)}return t}function f(n){var r=n.map(Date.parse);return o(r,isNaN)?[]:r}function v(n,r){r(n),t(n.childNodes,function(n){v(n,r)})}function d(n){var r,t=[],e=[];return v(n,function(n){var a=n.nodeName;&amp;ldquo;TR&amp;rdquo;==a?(r=[],t.push&amp;reg;,e.push(n)):(&amp;ldquo;TD&amp;rdquo;==a||&amp;ldquo;TH&amp;rdquo;==a)&amp;amp;&amp;amp;r.push(n)}),[t,e]}function p(n){if(&amp;ldquo;TABLE&amp;rdquo;==n.nodeName){for(var e=d(n),a=e[0],o=e[1],u=r(a),i=u&amp;gt;1&amp;amp;&amp;amp;r(a[0])&lt;r(a[1])?1:0,s=i+1,v=a[i],p=r(v),l=[],m=[],g=[],h=s;u&gt;h;++h){for(var N=0;p&amp;gt;N;++N){r(m)&lt;p&amp;&amp;m.push([]);var T=a[h][N],C=T.textContent||T.innerText||&#34;&#34;;m[N].push(C.trim())}g.push(h-s)}var L=&#34;tg-sort-asc&#34;,E=&#34;tg-sort-desc&#34;,b=function(){for(var n=0;p&gt;n;++n){var r=v[n].classList;r.remove(L),r.remove(E),l[n]=0}};t(v,function(n,t){l[t]=0;var e=n.classList;e.add(&amp;ldquo;tg-sort-header&amp;rdquo;),n.addEventListener(&amp;ldquo;click&amp;rdquo;,function(){function n(n,r){var t=d[n],e=d[r];return t&amp;gt;e?a:e&amp;gt;t?-a:a*(n-r)}var a=l[t];b(),a=1==a?-1:+!a,a&amp;amp;&amp;amp;e.add(a&amp;gt;0?L:E),l[t]=a;var i=m[t],v=function(n,r){return a&lt;em&gt;i[n].localeCompare(i[r])||a&lt;/em&gt;(n-r)},d=c(i);(r(d)||r(d=f(i)))&amp;amp;&amp;amp;(v=n);var p=g.slice();p.sort(v);for(var h=null,N=s;u&amp;gt;N;++N)h=o[N].parentNode,h.removeChild(o[N]);for(var N=s;u&amp;gt;N;++N)h.appendChild(o[s+p[N-s]])})})}}var l=parseFloat,m=u(/^(?:\s&lt;em&gt;)([+-]?(?:\d+)(?:,\d{3})&lt;/em&gt;)(.\d&lt;em&gt;)?$/g,/,/g),g=u(/^(?:\s&lt;/em&gt;)([+-]?(?:\d+)(?:.\d{3})&lt;em&gt;)(,\d&lt;/em&gt;)?$/g,/./g);n.addEventListener(&amp;ldquo;DOMContentLoaded&amp;rdquo;,function(){for(var t=n.getElementsByClassName(&amp;ldquo;tg&amp;rdquo;),e=0;e&lt;r(t);++e)try{p(t[e])}catch(a){}})}(document);&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If the purchase does not contain cannabis goods, then there is no validation.&lt;/p&gt;

&lt;h2 id=&#34;api-reference&#34;&gt;API Reference&lt;/h2&gt;

&lt;h3 id=&#34;facility-level-limits-validation&#34;&gt;Facility-level limits validation&lt;/h3&gt;

&lt;p&gt;HandlerName: &lt;code&gt;GetPurchaseLimitsByFacility&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;URL: &lt;code&gt;/v1/api/retail/purchaselimits/facilities/{facility}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;RequestType: &lt;strong&gt;GET&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Response body should returns the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#a40000&#34;&gt;integration_purchase_limit_id:&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;1,&lt;/span&gt;
        &lt;span style=&#34;color:#a40000&#34;&gt;name:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;Concentrate&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#a40000&#34;&gt;med_limit:&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;10,&lt;/span&gt;
        &lt;span style=&#34;color:#a40000&#34;&gt;rec_limit:&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;20,&lt;/span&gt;
        &lt;span style=&#34;color:#a40000&#34;&gt;uom_id:&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;1&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#a40000&#34;&gt;integration_purchase_limit_id:&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;2,&lt;/span&gt;
        &lt;span style=&#34;color:#a40000&#34;&gt;name:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;Flower&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#a40000&#34;&gt;med_limit:&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;24,&lt;/span&gt;
        &lt;span style=&#34;color:#a40000&#34;&gt;rec_limit:&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;24,&lt;/span&gt;
        &lt;span style=&#34;color:#a40000&#34;&gt;uom_id:&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;2&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;SQL to get Facility-level limits information:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;select&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;integration_purchase_limit_id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;med_limit&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;rec_limit&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;uom_id&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;from&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;common&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;integration_purchase_limit&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ipl&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;join&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;facility_integration&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;fi&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;on&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;fi&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;integration_id&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ipl&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;integration_id&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;where&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;fi&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;facility_id&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;&amp;lt;FAC_ID&amp;gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;order-level-limits-validation&#34;&gt;Order-level limits validation&lt;/h3&gt;

&lt;p&gt;HandlerName: &lt;code&gt;GetPurchaseLimitsByOrder&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;URL: &lt;code&gt;/v1/api/retail/purchaselimits/orders/{order}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;RequestType: &lt;strong&gt;GET&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Response body should return the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#a40000&#34;&gt;integration_purchase_limit_id:&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;1,&lt;/span&gt;
        &lt;span style=&#34;color:#a40000&#34;&gt;name:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;Concentrate&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#a40000&#34;&gt;qty:&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;12,&lt;/span&gt;
        &lt;span style=&#34;color:#a40000&#34;&gt;uom_id:&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;1&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#a40000&#34;&gt;integration_purchase_limit_id:&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;2,&lt;/span&gt;
        &lt;span style=&#34;color:#a40000&#34;&gt;name:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;Flower&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#a40000&#34;&gt;qty:&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;10,&lt;/span&gt;
        &lt;span style=&#34;color:#a40000&#34;&gt;uom_id:&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;2&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;SQL to return Order-level limits information:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;select&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;ipl&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;integration_purchase_limit_id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;ipl&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;sum&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
		&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CASE&lt;/span&gt;
		&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHEN&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ipl&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;uom_type&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;weight&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;standard_qty_uom_id&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;THEN&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ol&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;qty&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;unit_weight&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;uw&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;conversion_factor&lt;/span&gt;
		&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHEN&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ipl&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;uom_type&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;volume&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;standard_qty_uom_id&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;THEN&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ol&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;qty&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;unit_volume&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;uv&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;conversion_factor&lt;/span&gt;
		&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ELSE&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ol&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;qty&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;usq&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;conversion_factor&lt;/span&gt;
		&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;END&lt;/span&gt;
	&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;qty&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;from&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;order_hdr&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;oh&lt;/span&gt;
	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;join&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;order_line&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ol&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;on&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;oh&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;order_id&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ol&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;order_id&lt;/span&gt;
	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;join&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;item&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;on&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ol&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;item_id&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;item_id&lt;/span&gt;
	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;join&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;uom&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;usq&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;on&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;standard_qty_uom_id&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;u&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;uom_id&lt;/span&gt;
	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;left&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;outer&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;join&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;uom&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;uw&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;on&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;weight_uom_id&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;uw&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;uom_id&lt;/span&gt;
	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;left&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;outer&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;join&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;uom&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;uv&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;on&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;volume_uom_id&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;uw&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;uom_id&lt;/span&gt;
	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;join&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;item_category_integration&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ici&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;on&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;item_category_id&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ici&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;item_category_id&lt;/span&gt;
	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;join&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;common&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;integration_item_category&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;iic&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;on&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ici&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;integration_item_category_id&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;iic&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;integration_item_catgory_id&lt;/span&gt;
	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;join&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;common&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;integration_purchase_limit&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ipl&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;on&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;iic&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;integration_purchase_limit_id&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ipl&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;integration_purchase_limit_id&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;where&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;oh&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;order_id&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;?&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;by&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;oh&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;customer_id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;color:#000&#34;&gt;ipl&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;integration_purchase_limit_id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;database-reference&#34;&gt;Database reference&lt;/h2&gt;

&lt;p&gt;Puchase Limits database entries are store inside the &lt;strong&gt;Common&lt;/strong&gt; database. To get more information on database structure and relations, please, follow to the [General Database Information]() guide.&lt;/p&gt;

&lt;h3 id=&#34;limits-tables&#34;&gt;Limits Tables&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;common.integration&lt;/li&gt;
&lt;li&gt;common.integration_purchase_limit&lt;/li&gt;
&lt;li&gt;common.integration_item_category&lt;/li&gt;
&lt;li&gt;company.item_category&lt;/li&gt;
&lt;li&gt;company.item_category_integration&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;tables-properties-relations&#34;&gt;Tables Properties &amp;amp; Relations&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;common.integration&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;integration_id&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt; â€” e.g. Metrc California&lt;/li&gt;
&lt;li&gt;&lt;code&gt;area_type&lt;/code&gt; â€” e.g. State&lt;/li&gt;
&lt;li&gt;&lt;code&gt;area&lt;/code&gt; â€” e.g. CA&lt;/li&gt;
&lt;li&gt;&lt;code&gt;integrator_id&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;active&lt;/code&gt; â€” boolean: 1 or 0&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;common.integration_purchase_limit&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;integration_purchase_limit_id&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;integration_id&lt;/code&gt; &amp;ndash;&amp;gt; &lt;code&gt;common.integration.integration_id&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt; â€” Flower, Concentrates, Edibles,  common cannabis class&lt;/li&gt;
&lt;li&gt;&lt;code&gt;med_limit&lt;/code&gt;  â€” limit for medical usage&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rec_limit&lt;/code&gt;  â€” limit for recreational usage&lt;/li&gt;
&lt;li&gt;&lt;code&gt;uom_type&lt;/code&gt; â€” e.g. weight&lt;/li&gt;
&lt;li&gt;&lt;code&gt;limit_type&lt;/code&gt; â€” e.g thc or cbd&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;common.integration_item_category&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;integration_item_category_id&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;integration_id&lt;/code&gt; &amp;ndash;&amp;gt; common.integration.&lt;em&gt;integration_id&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;integration_purchase_limit_id&lt;/code&gt; &amp;ndash;&amp;gt; common.integration_purchase_limit.&lt;em&gt;integration_purchase_limit_id&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;description&lt;/code&gt; â€” e.g. Buds&lt;/li&gt;
&lt;li&gt;&lt;code&gt;external_id&lt;/code&gt; â€” e.g. Buds/Concentrate/Capsule â€” more specified name for &lt;code&gt;name&lt;/code&gt; column from &lt;code&gt;common.integration_purchase_limit&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;active&lt;/code&gt; â€” boolean: 1 or 0&lt;/li&gt;
&lt;li&gt;&lt;code&gt;last_sync&lt;/code&gt; â€” date -&lt;/li&gt;
&lt;li&gt;&lt;code&gt;compliance_info&lt;/code&gt; â€” stores json&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;compliance_info JSON example:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;QuantityType&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;WeightBased&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;RequiresStrain&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;CanBeRemediated&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;CanContainSeeds&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;RequiresItemBrand&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;RequiresUnitVolume&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;RequiresUnitWeight&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;ProductCategoryType&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Buds&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;RequiresIngredients&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;RequiresServingSize&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;RequiresProductPhoto&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;RequiresUnitCbdContent&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;RequiresUnitCbdPercent&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;RequiresUnitThcContent&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;RequiresUnitThcPercent&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;RequiresSupplyDurationDays&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;RequiresAdministrationMethod&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;company.item_category&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;item_category_id&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;item_class_id&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;description&lt;/code&gt; â€” same as &lt;code&gt;external_id&lt;/code&gt; from &lt;code&gt;common.integration_item_category&lt;/code&gt; e.g. &amp;ldquo;Topicals (each)&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;type_key&lt;/code&gt; â€” one word e.g. topicalseach&lt;/li&gt;
&lt;li&gt;&lt;code&gt;active&lt;/code&gt; â€” boolean: 1 or 0&lt;/li&gt;
&lt;li&gt;&lt;code&gt;uom_type&lt;/code&gt; â€” e.g weight or count&lt;/li&gt;
&lt;li&gt;&lt;code&gt;metrc_description&lt;/code&gt; â€” same info as in &lt;code&gt;description&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is_active&lt;/code&gt; â€” same as &lt;code&gt;active&lt;/code&gt;, boolean: 1 or 0&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;company.item_category_integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The table consists entirely of relations to other tables&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;item_category_integration_id&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;item_category_id&lt;/code&gt; &amp;ndash;&amp;gt; from &lt;code&gt;item_category&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;integration_id&lt;/code&gt; &amp;ndash;&amp;gt; from &lt;code&gt;common.integration&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;integration_item_category_id&lt;/code&gt; &amp;ndash;&amp;gt; from &lt;code&gt;common.integration_item_category&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;active&lt;/code&gt; â€” boolean: 1 or 0&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Returns &amp; Refunds</title>
      <link>https://vs-work.github.io/flourish-user-docs/docs/pos/payment/refunds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vs-work.github.io/flourish-user-docs/docs/pos/payment/refunds/</guid>
      <description>
        
        
        

&lt;p&gt;Whether a purchase is made in physical store or online (via Credit Card, LINX, or CanPay) the customer has the option of returning and refunding the sale. This article provides details on the process of each of those transactions.&lt;/p&gt;

&lt;h2 id=&#34;glossary&#34;&gt;Glossary&lt;/h2&gt;

&lt;p&gt;Here are some quick definitions of relevant terms:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Product Return:&lt;/strong&gt; is the process of a customer taking previously purchased merchandise back to the retailer, and in turn exchanging for another item (identical or different) or receiving a refund in cash, or a account credit.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Account credit refunds&lt;/strong&gt;: Customer may request a full or partial refund of a sale, resulting in the client account balance, that he can spend on future purchases.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Cash refunds:&lt;/strong&gt; Customer may request a full or partial refund of a sale in cash, this method helps to increase customer satisfaction.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Manual Payments:&lt;/strong&gt; Payments that supposed to be transacted with a third-party transaction (LINX or CanPay), but for one reason or another, they weren&amp;rsquo;t able to be processed in Flourish. The transaction still needs to be recorded in Flourish, and this is possible via Manual Payment&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;things-to-know&#34;&gt;Things to know&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Returns must be done at the same dispensary that made the initial sale.&lt;/li&gt;
&lt;li&gt;The PackageLabel needs to be the same as the original sale to maintain compliant traceability records&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;PatientLicenseNumber&lt;/code&gt; and/or &lt;code&gt;CaregiverNumber&lt;/code&gt; that was recorded on the original receipt should be on the new return receipt. This is critical in states where recurring purchase allotments are programmatically governed;&lt;/li&gt;
&lt;li&gt;Returns can be processed even if the original sale has been finalized.&lt;/li&gt;
&lt;li&gt;Returns can be processed even if the original package has been consumed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;refund-options&#34;&gt;Refund options&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/0mA59VG.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/rHUHkhN.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/SGpG6Kf.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;refunds&#34;&gt;Refunds&lt;/h2&gt;

&lt;p&gt;There are two methods to make a refund  - cash and account credit.&lt;/p&gt;

&lt;p&gt;The manager has the ability to choose cash as the refund method instead of the default method, account credit. This functionality allows issuing cash refunds to customers in cases where an account credit refund isn&amp;rsquo;t acceptable.&lt;/p&gt;

&lt;p&gt;The refund method will always default to &amp;ldquo;Account Credit.&amp;rdquo; Changing the refund method to &amp;ldquo;Cash&amp;rdquo; will require a manager pin approval every time. When a refund is processed via cash, the till will need to be updated with a transaction to reflect the outgoing cash.&lt;/p&gt;

&lt;h3 id=&#34;api-calls&#34;&gt;API Calls&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;GET&lt;/strong&gt; &lt;code&gt;go_api/grow/order/refundtypes&lt;/code&gt; - get all available refund methods&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;POST&lt;/strong&gt; &lt;code&gt;go_api/grow/facilities/${facility_id}/refund&lt;/code&gt; - create a new transaction, initiate refund&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GET&lt;/strong&gt; &lt;code&gt;go_api/grow/facilities/${facility_id}/order/${order_id}/refunds&lt;/code&gt; - get refunded items for current order&lt;/p&gt;

&lt;h3 id=&#34;validation&#34;&gt;Validation&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Customer can&amp;rsquo;t refund more than the initial purchase amount;&lt;/li&gt;
&lt;li&gt;Returns possible infinite amount of time;&lt;/li&gt;
&lt;li&gt;If customer refunded the purchase, the same transaction can&amp;rsquo;t be voided;&lt;/li&gt;
&lt;li&gt;Partial returns are possible;&lt;/li&gt;
&lt;li&gt;When multiples of an item are purchased, the sale cannot be partially returned. Example: A client wants to return one of two prerolls that they bought. He will need to return both joints;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Void Transactions</title>
      <link>https://vs-work.github.io/flourish-user-docs/docs/pos/payment/voids/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vs-work.github.io/flourish-user-docs/docs/pos/payment/voids/</guid>
      <description>
        
        
        

&lt;p&gt;Problematic transaction can be voidedâ€”even though it hasn&amp;rsquo;t settled. Since the transaction is pending and has not cleared the customer&amp;rsquo;s account, it means the sale can be prevented from going through.&lt;/p&gt;

&lt;h2 id=&#34;glossary&#34;&gt;Glossary&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Void transaction:&lt;/strong&gt;  Transaction that is canceled by a merchant or vendor before it settles through a consumer&amp;rsquo;s debit or credit card account. It may appear as a pending transaction when the customer checks their account online.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;understanding-void-transactions&#34;&gt;Understanding void transactions&lt;/h2&gt;

&lt;p&gt;When a transaction takes place, the merchant swipes the customer&amp;rsquo;s debit or credit card. If there are enough funds in the customer&amp;rsquo;s account, the terminal authorizes the transaction. But the transaction is not fully settled, as payment has to be released from the customer&amp;rsquo;s account to the merchant.&lt;/p&gt;

&lt;p&gt;If there is a problem with the transaction, it can be voidedâ€”even though it hasn&amp;rsquo;t settled. Since the transaction is pending and has not cleared the customer&amp;rsquo;s account, it means the sale can be prevented from going through.&lt;/p&gt;

&lt;p&gt;In order to void the transaction, the customer must contact the merchant and request the transaction be reversed. Once it is voided, the transaction will show up on the customer&amp;rsquo;s account as a pending transaction, which disappears after a certain amount of time.&lt;/p&gt;

&lt;p&gt;The hold can last anywhere from 24 hours to several days, causing the customer an inconvenience because he or she wonâ€™t be able to access the money during that time.&lt;/p&gt;

&lt;p&gt;A void transaction takes place on the same day as the original transaction.&lt;/p&gt;

&lt;h2 id=&#34;voiding-transactions&#34;&gt;Voiding transactions&lt;/h2&gt;

&lt;p&gt;The manager can void cash and manual payment transactions in POS on the same day they occur. This allows for correcting human errors when a cash payment, manual LINX, or manual CanPay payment is recorded incorrectly.&lt;/p&gt;

&lt;h3 id=&#34;transaction-history&#34;&gt;Transaction history&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/p1zU5rt.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/k17T9ow.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;On purchases that have transactions, there is a &amp;ldquo;Transactions History&amp;rdquo; button inside of POS. When this button is selected, a modal will open showing a transaction history table that is similar to the transaction history table on the web. Next to &amp;ldquo;Cash&amp;rdquo; and &amp;ldquo;Manual Payments&amp;rdquo;, there is a &amp;ldquo;Void&amp;rdquo; button/link. The void button/link appears only  on &amp;ldquo;Cash&amp;rdquo; and &amp;ldquo;Manual Payment&amp;rdquo; transactions, on transactions that occurred today, on transactions that occurred at the  same facility the user is currently authenticated, and for transactions that hasnâ€™t been voided already. When the void link is selected the void transaction modal will be shown.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/Jt2lNss.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;When the void link on the POS transaction history modal is selected, the user will see this void transaction modal. A manager (permission based) reviews the transaction details, will enter their pin, and will select &amp;ldquo;Submit&amp;rdquo; button, to void the transaction. After submitting, the screen gos to the &amp;ldquo;create payment&amp;rdquo; screen with the balance due reflecting the recently voided transactions.&lt;/p&gt;

&lt;h3 id=&#34;api-calls&#34;&gt;API Calls&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;GET&lt;/strong&gt; &lt;code&gt;go_api/grow/report/transactions&lt;/code&gt; - gets all transactions which were made during the purchase;
&lt;strong&gt;POST&lt;/strong&gt; &lt;code&gt;go_api/retail/payments/${transactionId}/void&lt;/code&gt; - void a particular transaction;&lt;/p&gt;

&lt;h3 id=&#34;validation&#34;&gt;Validation&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The void functionality is available only for the transaction, which:

&lt;ul&gt;
&lt;li&gt;Has &amp;ldquo;Cash&amp;rdquo; or &amp;ldquo;Manual Payment&amp;rdquo; payment method;&lt;/li&gt;
&lt;li&gt;Transactions older than one day can&amp;rsquo;t be voided;&lt;/li&gt;
&lt;li&gt;Occur at the same facility the customer is currently authenticated;&lt;/li&gt;
&lt;li&gt;Hasn&amp;rsquo;t been voided already;&lt;/li&gt;
&lt;li&gt;If there is no returned item in the purchase;&lt;/li&gt;
&lt;li&gt;Facility ID returned from &lt;code&gt;processRequest&lt;/code&gt; transaction should be the same as the facility ID on the original order payment transaction record&lt;/li&gt;
&lt;li&gt;If there is at least one refund transaction in the order, voiding transactions in this order becomes impossible.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
